{
    "id": "ExtBox1-ext-gen2416",
    "type": "controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|init": "",
        "designer|userClassName": "Ball"
    },
    "customConfigs": [],
    "designerId": "8c6f99fe-29e7-4209-af7d-638350f6e65a",
    "$viewOrder": 0,
    "expanded": true,
    "cn": [
        {
            "id": "ExtBox1-ext-gen6441",
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "checkCollisions",
                "designer|params": [
                    "ball"
                ],
                "implHandler": "var leftPaddle  = MyApp.app.paddleLeft.element.getBox(),\n    rightPaddle = MyApp.app.paddleRight.element.getBox(),\n    ballBox     = ball.getBox(),\n    ballHeight  = ball.getHeight(),\n    collisionX  = false,\n    collisionY  = false,\n    surfaceBox;\n\nif (!MyApp.app.surface) { \n    MyApp.app.surface = Ext.ComponentQuery.query('viewport > panel')[0].element.down('.x-panel-inner'); \n}\nsurfaceBox = MyApp.app.surface.getBox();\n\n//check collision with borders\nif (ballBox.left < surfaceBox.left) {\n    MyApp.app.dispatch({\n        controller : 'Referee',\n        action     : 'incrementScore',\n        args       : [ true ]\n    });\n\n    alert('Player has scored!');\n\n    return false;\n}\nelse if (ballBox.right > surfaceBox.right) {\n    MyApp.app.dispatch({\n        controller : 'Referee',\n        action     : 'incrementScore',\n        args       : [ false ]\n    });\n\n    alert('CPU has scored!');\n\n    return false;\n}\nif (ballBox.top < surfaceBox.top || ballBox.bottom > surfaceBox.bottom) {\n    collisionY = true;\n}\n//check collision with paddles\nif (ballBox.left < leftPaddle.right && \nballBox.left >= leftPaddle.right - 1 &&\nballBox.bottom >= leftPaddle.top && \nballBox.top <= leftPaddle.bottom) { collisionX = true; }\n\nelse if (ballBox.right > rightPaddle.left &&\nballBox.right <= rightPaddle.left + 1 &&\nballBox.bottom >= rightPaddle.top && \nballBox.top <= rightPaddle.bottom) { collisionX = true; }\n\n\n//change ball direction, if necessary\nthis.getDirection(collisionX, collisionY);\n\nreturn true;",
                "designer|userClassName": "checkCollisions"
            },
            "customConfigs": [],
            "expanded": true
        },
        {
            "id": "ExtBox1-ext-gen6629",
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "update",
                "designer|params": [
                    "ball"
                ],
                "implHandler": "var el  = ball.element,\n    pos = el.getXY(),\n    x, y;\n\nif (!this.direction) {\n    //TODO: Randomize the direction\n    this.direction = [ 1, 1 ];\n}\n\n//calculate new [ x, y ]\nx = pos[0] - 2 * this.direction[0];\ny = pos[1] - 3 * this.direction[1];\nel.setXY([ x, y ]);\n\n//check XY coordinates to see if player has scored\nif (this.checkCollisions(el)) {\n    //This is FAR more efficient than using dispatch()!\n    MyApp.controller.Paddle.prototype.updateCPU([x,y]);\n}",
                "designer|userClassName": "update"
            },
            "customConfigs": [],
            "expanded": true
        },
        {
            "id": "ExtBox1-ext-gen11772",
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getDirection",
                "designer|params": [
                    "collisionX",
                    "collisionY"
                ],
                "implHandler": "if (collisionX) { this.direction[0] *= -1; }\nif (collisionY) { this.direction[1] *= -1; }",
                "designer|userClassName": "getDirection"
            },
            "customConfigs": [],
            "expanded": true
        }
    ]
}